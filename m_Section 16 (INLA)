
###### 2025/5/20: INLAパッケージの問題により、inla関数が動作しないことがあるようです ######
###### ご迷惑をおかけしますが、修正ができましたら改めてお知らせします ######################


######################## Install inla
###### Inlaのインストールについては下記も参照ください：
## https://www.r-inla.org/download-install

install.packages("INLA",repos=c(getOption("repos"),INLA="https://inla.r-inla-download.org/R/stable"), dep=TRUE)
### or install.packages("INLA",repos=c(getOption("repos"),INLA="https://inla.r-inla-download.org/R/testing"), dep=TRUE)

###  For Windows 
if (!requireNamespace("BiocManager", quietly = TRUE))
  install.packages("BiocManager")
BiocManager::install(c("graph", "Rgraphviz"), dep=TRUE)

######################## 

library(INLA)
names(inla.models()$likelihood)
names(inla.models()$latent)
inla.list.models()

####################################################
########### example 1: disease mapping #############
####################################################

#install.packages( c( "spdep", "CARBayesdata", "sf", "RColorBrewer", fmesher ) )
library(spdep);library(CARBayesdata);library(RColorBrewer);library(fmesher)

##### pollutionhealth data
data(pollutionhealthdata)

##### Adjacency matrix
data(GGHB.IZ)
W.nb	  <- poly2nb(GGHB.IZ)
W     	<- nb2mat(W.nb, style = "B")

#### Poisson regression
formula	<- observed ~ offset(log(expected)) + jsa + price + pm10
res     <- inla(formula=formula, data=pollutionhealthdata, family="poisson", 
                control.compute = list(dic = TRUE))
summary(res)

#### Poisson CAR model with group effects
pollutionhealthdata$ID <- as.integer(pollutionhealthdata$IZ)	# zone ID
formula	   <- observed ~  pm10 + jsa + offset(log(expected)) + 
  f(ID, model = "besag", graph= W) + f(year, model="iid")
res   	   <- inla(formula=formula, data=pollutionhealthdata, family="nbinomial", 
                  control.compute = list(dic = TRUE))
summary(res)

#### Estimated group effects
res$summary.random[[1]][1:4,]
res$summary.random[[2]]

#### Predicted values
pred       <-res$summary.fitted.values
pred[1:4,]

#### Plot the predicted value (posterior mean)
year     <- 2011
dat2011  <- pollutionhealthdata[pollutionhealthdata$year==year,]
dat2011$pred<- pred$mean[pollutionhealthdata$year==year]

data(GGHB.IZ)
dat      <- merge(x=GGHB.IZ, y=dat2011, by="IZ", all.x=FALSE, duplicateGeoms = TRUE)
dat2     <- st_as_sf(dat)
nc       <- 11
breaks   <- seq(10, 200, len=nc+1)
pal      <- rev(brewer.pal(nc, "RdYlBu"))
plot(dat2[, c("observed", "pred")], pal=pal, breaks=breaks, axes=TRUE, lwd=0.1)


####################################################
########### example 2: spatial prediction ##########
####################################################

# install.packages( c("gstat", "sf") )
library(sf); library(sp)#library(gstat); 

##### Meuse data
data(meuse)
data(meuse.grid)

y       <- meuse[,c("zinc")]
x       <- meuse[,c("dist","ffreq")]
coords  <- as.matrix( meuse[,c("x","y")] )

x0      <- meuse.grid[,c("dist","ffreq")]
coords0 <- as.matrix( meuse.grid[,c("x","y")] )

##### Generate mesh
mesh1 	<- inla.mesh.2d( loc=coords, max.edge = c(1000,1000))
mesh2 	<- inla.mesh.2d( loc=coords, max.edge = c(300,1000))
mesh3 	<- inla.mesh.2d( loc=coords, max.edge = c(300,300))
mesh4 	<- inla.mesh.2d( loc=coords, max.edge = c(300,1000),cutoff=200)
mesh5 	<- inla.mesh.2d( loc=coords, max.edge = c(300,1000),offset=c(-0.3,-0.1))
mesh6 	<- inla.mesh.2d( loc=coords, max.edge = c(300,1000),offset=c(-0.1,-0.3))

plot(mesh1, asp=1);points(coords, col="red",pch=20,cex=0.7)
plot(mesh2, asp=1);points(coords, col="red",pch=20,cex=0.7)
plot(mesh3, asp=1);points(coords, col="red",pch=20,cex=0.7)
plot(mesh4, asp=1);points(coords, col="red",pch=20,cex=0.7)
plot(mesh5, asp=1);points(coords, col="red",pch=20,cex=0.7)
plot(mesh6, asp=1);points(coords, col="red",pch=20,cex=0.7)


##########################################################
##### Conventional geostatistical modeling ###############

##### Pre-processing
spde 	  <- inla.spde2.matern(mesh=mesh2, alpha=0.5)

A	      <- inla.spde.make.A( mesh=mesh2, loc=coords )
stk  	  <- inla.stack(data=list(y=y), A=list(1, A), tag="obs", 
                      effects=list(data.frame(intercept=1, dist=x$dist, ffreq=x$ffreq), s=1:spde$n.spde))

A0 	    <- inla.spde.make.A(mesh=mesh2, loc=coords0)
stk0	  <- inla.stack(data=list(y=NA), A=list(1, A0), tag="mis",
                     effects=list( data.frame(intercept=1, dist=x0$dist, ffreq=x0$ffreq),s=1:spde$n.spde))

stk.full<- inla.stack(stk, stk0)
stk.data<- inla.stack.data(stk.full)
stk.A	  <- inla.stack.A(stk.full)

##### Geostatistical modeling and prediction
mod 	  <- inla( log(y) ~ 0 + intercept + dist + ffreq + f(s, model=spde),  data=stk.data,
                control.predictor=list( A=stk.A ), family="gaussian")

mis.ind	<- inla.stack.index(stk.full, tag="mis")$data
pred	  <- mod$summary.fitted.values[mis.ind, "mean"]
pred_sd	<- mod$summary.fitted.values[mis.ind, "sd"]

##### Plot the predicted values
meuse.grid_sf        <- st_as_sf(meuse.grid, coords = c("x", "y"), crs = 28992)
meuse.grid_sf$pred   <-pred
meuse.grid_sf$pred_sd<-pred_sd
plot(meuse.grid_sf[, "pred"], axes=TRUE, pch=15)
plot(meuse.grid_sf[, "pred_sd"], axes=TRUE, pch=15)

########################################################################
##### Geostatistical modeling considering physical barrier #############

##### [a] Constrained by the Meuse river
xran       <- range(mesh2$loc[,1])
yran       <- range(mesh2$loc[,2])
bcoords    <- rbind(c(xran[1], yran[1]),c(xran[2], yran[1]),
                    c(xran[2], yran[2]),c(xran[1], yran[2]),
                    c(xran[1], yran[1]))
polygon    <- st_sfc(st_polygon(list(bcoords)))
polygon_sf <- st_make_valid(st_sf(geometry = polygon))

data(meuse.riv)
meuse_sf   <- st_sfc(st_polygon(list(meuse.riv)))
meuse_sf   <- st_sf(geometry = meuse_sf)
meuse_sf2  <- st_difference(polygon_sf, meuse_sf)
mesh_b1	   <- inla.mesh.2d( loc=coords, max.edge = 300, boundary=meuse_sf2)

##### [b] Constrained by the study area 
meuse.grid_sp <-meuse.grid
coordinates(meuse.grid_sp) = c("x", "y")
gridded(meuse.grid_sp) <- TRUE
meuse.grid_sp <- as(meuse.grid_sp, "SpatialPolygons")
meuse.grid_sf <- st_as_sf(meuse.grid_sp)
meuse.area_sf <- st_union(meuse.grid_sf)
mesh_b2       <- inla.mesh.2d(loc = coords, max.edge = 300, boundary = meuse.area_sf)

##### Spatial prediction under [a] or [b] ##########

##### Pre-processing
mesh2    <-mesh_b1 ## or mesh_b2
plot(mesh2, asp=1);points(coords, col="red",pch=20,cex=0.7)
spde<- inla.spde2.matern(mesh=mesh2, alpha=1.5)

A 	 <- inla.spde.make.A( mesh=mesh2, loc=coords)
stk  <- inla.stack(data=list(y=y), A=list(1, A), tag="obs",
                   effects=list(data.frame(intercept=1,dist=x$dist, ffreq=x$ffreq), s=1:spde$n.spde))

A0 	 <- inla.spde.make.A(mesh=mesh2, loc=coords0)
stk0 <- inla.stack(data=list(y=NA), A=list(1, A0), tag="mis",
                   effects=list( data.frame(intercept=1,dist=x0$dist, ffreq=x0$ffreq),  s=1:spde$n.spde))

stk.full <- inla.stack(stk, stk0)
stk.data <- inla.stack.data(stk.full)
stk.A    <- inla.stack.A(stk.full)

##### Geostatistical modeling and prediction
mod     <- inla( log(y) ~ 0 + intercept + dist + ffreq + f(s, model=spde),  data=stk.data,
                 control.predictor=list( A=stk.A),family="gaussian")

mis.ind<- inla.stack.index(stk.full, tag="mis")$data
pred	 <- mod$summary.fitted.values[mis.ind, "mean"]
pred_sd<- mod$summary.fitted.values[mis.ind, "sd"]
meuse.grid_sf$pred2   <-pred
meuse.grid_sf$pred2_sd<-pred_sd

##### Plot the predicted values
plot(meuse.grid_sf[, "pred2"], axes=TRUE, pch=15,border=NA)
plot(meuse.grid_sf[, "pred2_sd"], axes=TRUE, pch=15,border=NA)
